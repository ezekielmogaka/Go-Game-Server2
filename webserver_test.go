package main

/*
Package testing provides support for automated testing of Go packages.
*/
import (
	"net/http"
	"net/http/httptest"
	"testing"
)

func TestQueryAllGames(t *testing.T) {
	request, error := http.NewRequest("GET", "/", nil)
	if error != nil {
		t.Fatal(error)
	}
	//create an http.ResponseWriter implementation that records the response generated by an HTTP handler

	recorderResponse := httptest.NewRecorder()

	handler := http.HandlerFunc(QueryAllGames)

	handler.ServeHTTP(recorderResponse, request)

	if status := recorderResponse.Code; status != http.StatusOK {
		t.Errorf("The Handler returned a wrong status code: It got %v whilst it expected %v", status, http.StatusOK)
	}

}

func TestGameDetailByIdHandler(t *testing.T) {
	request, error := http.NewRequest("GET", "/game", nil)
	if error != nil {
		t.Fatal(error)
	}

	recorderResponse := httptest.NewRecorder()

	handler := http.HandlerFunc(GameDetailByIdHandler) //define a function that handles HTTP requests and responses.
	handler.ServeHTTP(recorderResponse, request)

	handler.ServeHTTP(recorderResponse, request)

	if status := recorderResponse.Code; status != http.StatusBadRequest {
		t.Errorf("The Handler Function returned a wrong status code: It got %v whilst it was expecting %v", status, http.StatusBadRequest)
	}
}

func TestGameQueryParameter(t *testing.T) {
	request, error := http.NewRequest("GET", "/game?id=gameid", nil)
	//Test for any error when checking the request
	if error != nil {
		t.Fatal(error)
	}

	//create an http.ResponseWriter implementation that records the response generated by an HTTP handler

	recorderResponse := httptest.NewRecorder()
	handler := http.HandlerFunc(GameDetailByIdHandler) //define a function that handles HTTP requests and responses.
	handler.ServeHTTP(recorderResponse, request)

	status := recorderResponse.Code

	if status != http.StatusNotFound {
		t.Errorf("Wrong status Code returned by Handler. Status is: %v and %v was expected", status, http.StatusNotFound)

	}

}
